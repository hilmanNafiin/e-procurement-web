# Stage 1: Build environment
FROM node:20 AS staging
ENV NODE_ENV=development
WORKDIR /admin

# Set a higher memory limit for Node.js
ENV NODE_OPTIONS="--max-old-space-size=4096"

# Install build tools for native modules
RUN apt-get update && apt-get install -y python3 g++ make

# Copy package files and install dependencies
COPY package.json yarn.lock ./
RUN yarn install --frozen-lockfile

# Copy the rest of the application files
COPY . /admin/

# Build the application
RUN npx update-browserslist-db@latest
RUN yarn run build

# Stage 2: Nginx setup
FROM nginx:latest
WORKDIR /admin

# Copy the built files from the build stage
COPY --from=staging /admin /admin

# Copy the Nginx configuration
COPY --from=staging /admin/nginx/default.conf /etc/nginx/conf.d/default.conf

# Run Nginx
ENTRYPOINT ["nginx", "-g", "daemon off;"]
EXPOSE 80
